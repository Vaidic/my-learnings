buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}" apply false
    id 'jacoco'
    id 'com.diffplug.spotless' version "${spotlessVersion}"
}

allprojects {
    group = 'in.vedify.ecom'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    apply plugin: 'com.diffplug.spotless'

    spotless {
        java {
            importOrder()
            removeUnusedImports()
            googleJavaFormat("${googleJavaFormatVersion}").aosp().reflowLongStrings()
            formatAnnotations()
            trimTrailingWhitespace()
            endWithNewline()
        }
        format 'misc', {
            target '*.gradle', '*.md', '.gitignore', '*.properties'
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }

    tasks.named('build') {
        dependsOn 'spotlessApply'
        doLast {
            println "Build successfully!"
        }
    }
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.required = true
            html.required = true
        }
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}
